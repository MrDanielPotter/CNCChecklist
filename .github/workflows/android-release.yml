name: Build Android APK (with extended logs)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_NDK_HOME: ${{ github.workspace }}/android-ndk
      PIP_DISABLE_PIP_VERSION_CHECK: 1
      # Больше подробностей от p4a/buildozer
      P4A_DEBUG: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare logs dir
        run: |
          mkdir -p logs
          echo "Workflow started at: $(date -u +'%Y-%m-%d %H:%M:%S UTC')" | tee -a logs/summary.txt

      # Java 17 требуется для последних commandline-tools/sdkmanager
      - name: Set up Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install system deps (Ubuntu 24.04)
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip \
            libstdc++6 libffi-dev libssl-dev zlib1g-dev \
            libncurses6 libtinfo6

      - name: System info (env, versions, disk)
        run: |
          set -euo pipefail
          {
            echo "=== ENV (top) ==="; printenv | sort
            echo; echo "=== Versions ==="
            echo "java -version:"; java -version 2>&1 || true
            echo "python --version:"; python --version 2>&1 || true
            echo "pip --version:"; pip --version 2>&1 || true
            echo; echo "=== Disk usage (top) ==="
            df -h
          } | tee logs/system_info.txt

      - name: Prepare SDK/NDK folders
        run: |
          set -euxo pipefail
          mkdir -p "$ANDROID_HOME" "$ANDROID_NDK_HOME"

      - name: Install Android commandline-tools (latest)
        run: |
          set -euxo pipefail
          cd "$ANDROID_HOME"
          curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o cmdtools.zip
          mkdir -p cmdline-tools
          unzip -q cmdtools.zip -d cmdline-tools-tmp
          mv cmdline-tools-tmp/cmdline-tools cmdline-tools/latest
          rm -rf cmdline-tools-tmp cmdtools.zip
          "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --version | tee -a logs/system_info.txt
          java -version 2>&1 | tee -a logs/system_info.txt

      - name: Accept licenses & install SDK/NDK (robust, logged)
        env:
          SDKM: ${{ env.ANDROID_HOME }}/cmdline-tools/latest/bin/sdkmanager
          SDKROOT: ${{ env.ANDROID_HOME }}
        run: |
          set -euo pipefail

          exec &> >(tee -a logs/sdkmanager_install.log)

          echo "== Accept licenses (ignore non-zero due to pipe) =="
          yes | "$SDKM" --sdk_root="$SDKROOT" --licenses || true

          install_pkg() {
            local pkg="$1"
            echo "== Installing: $pkg =="
            for i in 1 2 3; do
              "$SDKM" --sdk_root="$SDKROOT" "$pkg" && break || {
                echo "WARN: attempt $i failed for $pkg; retrying in 5s..."
                sleep 5
              }
            done
          }

          install_pkg "platform-tools"
          install_pkg "platforms;android-33"
          install_pkg "build-tools;34.0.0"
          install_pkg "ndk;25.2.9519653"

          ln -s "$ANDROID_HOME/ndk/25.2.9519653" "$ANDROID_NDK_HOME" || true

          # возможный битый симлинк от старых билдов
          if [ -L "$ANDROID_HOME/build-tools/36.1.0-rc1" ]; then rm -f "$ANDROID_HOME/build-tools/36.1.0-rc1"; fi

          echo "== Verify installed list (head) =="
          "$SDKM" --sdk_root="$SDKROOT" --list | sed -n '1,200p' || true
          echo "== Disk usage =="
          du -sh "$ANDROID_HOME" || true
          df -h || true

      - name: Install buildozer & Python deps
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip wheel setuptools cython
          python -m pip install buildozer==1.5.0

      - name: Download DejaVuSans.ttf (for Cyrillic PDF)
        run: |
          set -euxo pipefail
          mkdir -p app/assets/fonts
          curl -sSL "https://raw.githubusercontent.com/dejavu-fonts/dejavu-fonts/master/ttf/DejaVuSans.ttf" -o app/assets/fonts/DejaVuSans.ttf
          ls -lh app/assets/fonts | tee -a logs/system_info.txt

      - name: Build debug APK (verbose, logged)
        run: |
          set -euo pipefail
          # подробный лог сборки
          ( set -x; buildozer -v android debug ) 2>&1 | tee logs/buildozer_build.log

      - name: List build outputs
        run: |
          set -euo pipefail
          ls -la bin | tee -a logs/summary.txt || true
          echo "Build finished at: $(date -u +'%Y-%m-%d %H:%M:%S UTC')" | tee -a logs/summary.txt

      - name: Job summary (quick view)
        if: always()
        run: |
          {
            echo "## CNC Checklist – CI summary"
            echo ""
            echo "**System**: Java $(java -version 2>&1 | head -n1), Python $(python --version 2>&1)"
            echo "**SDK root**: $ANDROID_HOME"
            echo "**Outputs**:"
            ls -la bin || echo "no bin/"
          } >> $GITHUB_STEP_SUMMARY

      - name: Upload APK/AAB artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cnc-checklist-apk
          path: |
            bin/*.apk
            bin/*.aab
          if-no-files-found: warn

      - name: Upload CI logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs
          path: |
            logs/**
            .buildozer/**/*.log
            .buildozer/**/build*.txt
            .buildozer/android/platform/python-for-android/*.log
          if-no-files-found: warn
